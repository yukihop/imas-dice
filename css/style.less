* { margin: 0; padding: 0; }

html, body {
  background-color: black;
  font-size: 12pt;
  color: white;
}

li { list-style-type: none; }

.transform(@param) {
  -webkit-transform: @param;
  transform: @param;
}

.no-user-select() {
  user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

body.in_effect {
  cursor: wait;
  background-color: #333;
}

header {
  background-color: #555;
}

button {
  padding: 3px 8px;
  border-radius: 5px;
}

canvas {
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}

#main {
  padding: 0px;
  cursor: default;
}

#templates {
  display: none;
}

.main_panel() {
  .no-user-select;
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 500px;
  overflow: hidden;
}

#field {
  .main_panel;
  background-image: url('../images/background_grass.jpg');
  background-size: cover;
}

// Title

#title {
  .main_panel;
  background: linear-gradient(to right bottom, salmon, purple);
  text-align: center;
  .main_menu {
    font-size: 18px;
    font-weight: bolder;
    width: 200px;
  }
}

#stage_select {
  .main_panel;
  background: linear-gradient(to right bottom, salmon, white);
  >p {
    color: brown;
    text-align: center;
    font-size: 30px;
    text-shadow: 1px 1px white;
  }
  #stage_list {
    margin: 0 30px;
    max-width: 400px;
    margin: 0 auto;
    height: 250px;
    overflow-y: auto;
    li {
      text-align: center;
      font-size: 28px;
      cursor: pointer;
      @base: maroon;
      background: linear-gradient(to bottom, @base, darken(@base, 10%));
      &:hover {
        background: linear-gradient(to bottom, lighten(@base, 15%), lighten(@base, 5%));
      }
    }
  }
  #character_list {
    padding-top: 45px;
    width: 850px;
    height: 100px;
    text-align: center;
    margin: 0 auto;
    >li {
      float: left;
    }
  }
}

#dicegame {
  .main_panel;
  background-color: #555;
  #players {
    position: absolute;
    background-color: rgba(0, 0, 0, 0.2);
    border-radius: 5px;
    bottom: 10px;
    left: 10px;
    border: 1px solid black;
    padding: 5px 10px;
  }
  #stack {
    position: absolute;
    bottom: 0px;
    right: 0px;
    transition: opacity 0.2s;
    opacity: 0.7;
    height: 52px;
    padding: 5px 0 0 10px;
    .dice {
      margin: 0 2px;
    }
    #select_marker {
      opacity: 0;
      transition: opacity 0.2s;
      padding: 5px;
      min-width: 140px;
      text-align: center;
      position: absolute;
      bottom: 60px;
      background-color: rgba(0, 0, 0, 0.8);
      color: white;
      border-radius: 10px;
    }
    #dice_indicator {
      display: inline-block;
      text-align: center;
      width: 120px;
      height: 30px;
      background-color: rgba(0, 0, 0, 0.5);
      border-radius: 10px 10px 0 0;
      .dice_stock {
        display: inline-block;
        text-shadow: 1px 1px 1px black;
        font-weight: bold;
        font-size: 24px;
        color: salmon;
        min-width: 40px;
        text-align: center;
      }
    }
    &.stock_empty #dice_indicator {
      background-color: rgba(180, 0, 0, 0.5);
      .dice_stock { color: red; }
    }
    .next {
      display: none;
      width: 120px;
      position: absolute;
      right: 0;
      top: 0;
      color: #842;
      text-align: center;
      font-weight: bold;
      background-color: rgba(255, 255, 255, 0.8);
      border-radius: 10px;
    }
  }
  #stage_end {
    position: static;
    z-index: 10;
    width: 300px;
    margin: 100px auto 0 auto;
    border: 1px solid red;
  }
  &.ready {
    #stack {
      opacity: 1;
      background-color: rgba(0, 0, 0, 0.5);
      .dice {
        cursor: pointer;
      }
      #select_marker {
        display: block;
        opacity: 1;
      }
    }
  }
}

.phase_message {
  background-image: url('../images/gameclear.png');
  width: 300px;
  height: 100px;
  overflow: hidden;
}

#stage_clear, #stage_failed, #stage_failed_dice {
  display: none;
}

#stage_failed { background-position: 0 -100px; }
#stage_failed_dice { background-position: 0 -200px; }
.battle_start { background-position: 0 -300px; }
.battle_win { background-position: 0 -400px; }
.stage_start { background-position: 0 -500px; }

#dicegame_canvas {
  .main_panel;
}

.phase_message_frame {
  position: absolute;
  width: 100%;
  top: 150px;
  background: rgba(0, 0, 0, 0.3);
  .phase_message {
    display: block;
    margin: 0 auto;
  }
}

.dicebg (@i, @size: 48px) { background-position: (-(@i - 1) * @size) 0; }

// Character

.character {
  display: inline-block;
  position: relative;
  width: 100px;
  height: 100px;
  margin: 0 3px;
  .multipliers {
    position: absolute;
    width: 100px;
    bottom: 103px;
    background-color: rgba(255, 255, 255, 0.8);
    color: navy;
    font-weight: bold;
    min-height: 1em;
    border: 1px solid white;
    border-radius: 5px;
    text-align: center;
    .dice {
      @size: 18px;
      width: @size;
      height: @size;
      background-size: (@size * 6) @size;
      &.dice1 { .dicebg(1, @size); }
      &.dice2 { .dicebg(2, @size); }
      &.dice3 { .dicebg(3, @size); }
      &.dice4 { .dicebg(4, @size); }
      &.dice5 { .dicebg(5, @size); }
      &.dice6 { .dicebg(6, @size); }
    }
    .multiplier {
      border-radius: 5px;
      transition: background 0.3s;
      &.invoked {
        background: linear-gradient(to bottom, #800, #f00, #700);
        color: white;
        text-shadow: 1px 1px 1px red;
      }
      &.invokable {
        background: linear-gradient(to bottom, yellow, white, yellow);
      }
    }
  }
  .current_attack {
    position: absolute;
    bottom: 10px;
    left: 0;
    right: 0;
    font-size: 48px;
    font-weight: bold;
    color: yellow;
    text-shadow: 2px 2px 1px black;
    text-align: center;
  }
  .status_list {
    position: absolute;
    font-weight: bold;
    font-size: 10px;
    background-color: rgba(0, 0, 0, 0.3);
  }
  .mp_frame {
    position: absolute;
    left: 3px;
    right: 3px;
    bottom: 2px;
    height: 9px;
    border: 1px solid white;
    background-color: rgba(0, 0, 0, 0.8);
    border-radius: 3px;
    .mp_bar {
      width: 100%;
      height: 100%;
      background: linear-gradient(to right, #0ab, #05f);
      border-radius: 3px;
    }
    #stage_select & { display: none; }
  }
  .popup {
    position: absolute;
    width: 140px;
    bottom: 100px;
    left: -20px;
    z-index: 10;
    background-color: rgba(0, 0, 50, 0.7);
    border: 2px solid white;
    border-radius: 5px;
    box-shadow: 2px 2px 2px black;
    color: white;
    text-align: center;
    display: none;
    .skills {
      margin-top: 3px;
      border-top: 1px solid white;
      background-color: rgba(0, 0, 0, 0.8);
      border-radius: 0 0 5px 5px;
      li.skill {
        color: gray;
        padding: 2px 0;
        &.enabled {
          color: white;
          cursor: pointer;
          &:hover {
            color: yellow;
            background-color: #550;
          }
          &:active {
            background-color: #330;
          }
        }
      }
    }
    .attribute {
      position: absolute;
      left: -12px;
      top: -12px;
      width: 24px;
      height: 24px;
      background-image: url('../images/attributes.png');
      background-size: 24px (24px * 4);
      &.cute { background-position: 0 0; }
      &.cool { background-position: 0 -24px; }
      &.passion { background-position: 0 -48px; }
      &.non { background-position: 0 -72px; }
    }
  }
  #dicegame.ready &:hover .popup { display: block; }
  #stage_select &:hover .popup { display: block; }
  &.selected { box-shadow: 0 0 3px 5px red; }
}

.dice {
  position: relative;
  display: inline-block;
  width: 48px;
  height: 48px;
  background-image: url('../images/dices.png');
  background-size: (48px * 6) 48px;
  &.dice1 { .dicebg(1); }
  &.dice2 { .dicebg(2); }
  &.dice3 { .dicebg(3); }
  &.dice4 { .dicebg(4); }
  &.dice5 { .dicebg(5); }
  &.dice6 { .dicebg(6); }
}
.dice_placeholder {
  position: relative;
  display: inline-block;
  width: 48px;
  height: 48px;
}


@status_size: 48px;
.status_icon(@pos) {
  background-position: (mod(@pos, 5) * (-@status_size)) (floor(@pos / 5) * (-@status_size));
}
.status {
  background-image: url('../images/status_icons.png');
  background-size: (@status_size * 5) (@status_size * 5);
  width: @status_size;
  height: @status_size;
  &.atk_up { .status_icon(0); }
  &.atk_down { .status_icon(1); }
  &.def_up { .status_icon(5); }
  &.def_down { .status_icon(6); }
}

#gamemode {
  position: relative;
  height: 500px;
  width: 100%;
}

#battle {
  .main_panel;
  display: none;
  background-image: url('../images/background_flame.jpg');
  background-size: cover;
  #enemies {
    position: static;
    text-align: center;
    margin: 20px auto;
    vertical-align: bottom;
  }
  .enemy {
    display: inline-block;
    position: relative;
    margin: 0 15px;
    .enemy_image {
      margin-bottom: -10px;
    }
    .enemy_name {
      position: absolute;
      left: 10px;
      right: 10px;
      bottom: 18px;
      height: 20px;
      margin: 0 auto;
      line-height: 20px;
      background-color: black;
      border: 2px solid white;
      border-radius: 5px;
    }
    .enemy_hp {
      position: absolute;
      left: 10px;
      right: 10px;
      bottom: 0;
      height: 15px;
      margin-top: 3px auto 0;
      border: 1px solid white;
      background-color: rgba(0, 0, 0, 0.5);
      box-shadow: 1px 1px 2px silver;
      .enemy_hp_bar {
        position: absolute;
        left: 0;
        top: 0;
        height: 100%;
        width: 100%;
        background-color: red;
      }
      .enemy_hp_value {
        position: absolute;
        left: 10px;
        top: 0;
        line-height: 15px;
        font-size: 15px;
        font-weight: bolder;
        color: yellow;
      }
    }
  }
  #onboard_container {
    text-align: center;
  }
  #onboard {
    display: inline-block;
    padding: 3px;
    background-color: rgba(0, 0, 0, 0.5);
    border-radius: 5px;
  }
}

#game_result {
  .main_panel;
  display: none;
  font-size: 18px;
  background-color: brown;
  text-align: center;
  button {
    width: 200px;
    height: 50px;
  }
  #stage_clear { margin: 0px auto; }
  #growth {
    max-width: 800px;
    margin: 10px auto;
    div.character_grow {
      width: 250px;
      height: 100px;
      margin: 5px;
      display: inline-block;
      background: #300;
      border: 1px solid white;
      box-shadow: 2px 2px 2px yellow;
      .name {
        width: 100px;
        height: 100px;
        float: left;
        background-size: contain;
      }
      span {
        font-size: 150%; color: yellow;
      }
    }
  }
}

#tooltip {
  font-size: 90%;
  position: absolute;
  z-index: 9999;
  background-color: rgba(0, 0, 0, 0.8);
  border: 2px solid white;
  border-radius: 5px;
  width: 150px;
  padding: 1px 4px;
  display: none;
}

#hp_indicator {
  position: absolute;
  left: 10px;
  top: 10px;
  right: 10px;
  height: 15px;
  border: 1px solid pink;
  .hp_value {
    position: absolute;
    font-weight: bold;
    color: black;
    font-size: 15px;
    line-height: 15px;
  }
  .hp_bar {
    position: absolute;
    width: 100%;
    height: 100%;
    background: linear-gradient(to bottom, #fa0, #f30, #850);
  }
  .hp_healbar {
    position: absolute;
    width: 0;
    height: 100%;
    background-color: lime;
  }
  .hp_damagebar {
    position: absolute;
    width: 0;
    height: 100%;
    background: linear-gradient(to bottom, #800, #000);
  }
  &.healing {
    border: 1px solid yellow;
    box-shadow: 3px 3px 3px cyan;
  }
  &.damaging {
    box-shadow: 3px 3px 3px red;
  }
}

#gamelog {
  border: 1px solid white;
  font-family: monospace;
  font-size: small;
  margin: 10px;
  height: 5em;
  overflow-y: scroll;
}

// FlyText

.flytext {
  font-size: 40px;
  position: absolute;
  color: orange;
  font-weight: bold;
  text-shadow: 1px 1px 2px black;
  text-align: center;
  &.enemy_attack {
    min-width: 150px;
    padding: 0 15px;
    font-size: 60px;
    background: linear-gradient(to bottom, red, salmon, red);
    color: white;
  }
  &.all_attack {
    min-width: 150px;
    padding: 0 15px;
    font-size: 60px;
    color: orange;
    background-color: rgba(255, 200, 200, 0.5);
    border-top: 2px solid orange;
    border-bottom: 2px solid orange;
  }
  &.modify_caption {
    min-width: 50px;
    background-color: black;
    border: 1px solid white;
    color: white;
    font-size: 16px;
  }
}

// TalkShow

.talkshow {
  .no-user-select;
  background: none;
  .ui-dialog-content {
    background-image: none;
    background: rgba(0, 0, 0, 0.8);
    color: white;
    font-size: 130%;
    overflow: hidden;
    p {
      position: relative;
      left: 400px;
      margin-bottom: 10px;
      background-repeat: no-repeat;
      .character_talk(@character) {
        &.@{character} {
          padding-left: 110px;
          min-height: 100px;
          background-image: url('../images/characters/@{character}_p.png');
        }
      }
      .character_talk(kotori);
      .character_talk(yukiho);
      .character_talk(ranko);
      .character_talk(sae);
      .character_talk(anzu);
      &.right { background-position: 240px 0; padding-left: 0; padding-right: 110px; }
      &.info { color: yellow; }
    }
  }
  .ui-dialog-titlebar { display: none; }
}

.block {
  display: inline-block;
  width: 48px;
  height: 48px;
  overflow: hidden;
  background-image: url('../images/blocks.png');
  .block_type (@type, @pos) {
    &.@{type} {
      background-position: (-@pos * 48px) 0;
    }
  }
  .block_type(empty, 0);
  .block_type(start, 1);
  .block_type(treasure, 2);
  .block_type(enemy, 3);
  .block_type(heal, 4);
  .block_type(damage, 5);
  .block_type(back, 6);
  .block_type(proceed, 7);
  .block_type(boss, 8);
  .block_type(stop, 10);
}